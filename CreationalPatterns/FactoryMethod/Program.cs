using FactoryMethod.Developers;
using FactoryMethods.AtHome;

namespace FactoryMethod
{
    internal class Program
    {
        /* Назначение:

                Пределяет интерфейс для создания объекта, но оставляет подклассам решение о том,
                экземпляры какого класса должны создаваться.
                Фабричный метод позволяет классу делегировать создание экземпляров подклассам.
        */

        /* Когда надо применять паттерн:

                1. Когда заранее неизвестно, объекты каких типов необходимо создавать

                2. Когда система должна быть независимой от процесса создания новых объектов и расширяемой:
                   в нее можно легко вводить новые классы, объекты которых система должна создавать.

                3. Когда создание новых объектов необходимо делегировать из базового класса классам наследникам
        */

        /* Участники:
                Product - определяет интерфейс (асбтрактный класс) объектов, создаваемых фабричным методом
                СoncreteProduct - конкретный продукт, реализует(наследует) Product
                Creator - объявляет фабричный метод, возвращающий объект типа Product.
                ConcreteCreator - конкретный создатель. Наследники Creator. Определяют свою реализацию создания.
        */

        static void Main(string[] args)
        {
            Developer dev = new PanelDeveloper("ООО КирпичСтрой");
            House house1 = dev.Create();

            dev = new WoodDeveloper("Частный застройщик");
            House house2 = dev.Create();
        }
    }
}